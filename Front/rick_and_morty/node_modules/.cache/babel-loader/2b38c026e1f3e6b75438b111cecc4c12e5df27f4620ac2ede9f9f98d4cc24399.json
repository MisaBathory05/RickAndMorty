{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmisa\\\\Desktop\\\\Rick y Morty app\\\\Front\\\\Rick-and-Morty-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\n// import Card from './components/Card/Card.jsx';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/NavBar/NavBar';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport About from './components/About/About';\nimport Form from './components/Form/Form';\nimport PathRoutes from \"./components/Helpers/Routes.helper\";\nimport Detail from './components/Detail/Detail';\nimport Favorites from './components/Favorites/Favorites';\n// import SearchBar from './components/SearchBar/SearchBar.jsx';\n// import characters from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const personajes = {\n    id: 1,\n    name: 'Rick Sanchez',\n    status: 'Alive',\n    species: 'Human',\n    gender: 'Male',\n    origin: {\n      name: 'Earth (C-137)',\n      url: 'https://rickandmortyapi.com/api/location/1'\n    },\n    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg'\n  };\n  const [characters, setCharacters] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n  const email = '123abc@gmail.com';\n  const password = 'asd123';\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access]);\n\n  // const onSearch= () => {\n  //    setCharacters([...characters, personajes])\n  // }\n  function onSearch(id) {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    });\n  }\n  const onClose = id => {\n    // const characterFiltered = characters.filter((char) => char.id !== id)\n    setCharacters(characters.filter(char => char.id !== Number(id)));\n  };\n  function Login(userData) {\n    const {\n      email,\n      password\n    } = userData;\n    const URL = 'http://localhost:3001/rickandmorty/login/';\n    axios(URL + `?email=${email}&password=${password}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      const {\n        access\n      } = data;\n      setAccess(data);\n      access && navigate('/home');\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== '/' && /*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: PathRoutes.FORM,\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: PathRoutes.HOME,\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: PathRoutes.ABOUT,\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: PathRoutes.DETAIL,\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: PathRoutes.FAVORITES,\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this), \"         \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"vjWmJWOav/wTK4ExioA6oX5YkWU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Cards","NavBar","axios","Routes","Route","useLocation","useNavigate","About","Form","PathRoutes","Detail","Favorites","jsxDEV","_jsxDEV","App","_s","personajes","id","name","status","species","gender","origin","url","image","characters","setCharacters","location","navigate","access","setAccess","email","password","onSearch","then","_ref","data","oldChars","window","alert","onClose","filter","char","Number","Login","userData","URL","_ref2","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","FORM","element","login","HOME","ABOUT","DETAIL","FAVORITES","_c","$RefreshReg$"],"sources":["C:/Users/tmisa/Desktop/Rick y Morty app/Front/Rick-and-Morty-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './App.css';\r\n// import Card from './components/Card/Card.jsx';\r\nimport Cards from './components/Cards/Cards.jsx';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport axios from 'axios';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport About from './components/About/About';\r\nimport Form from './components/Form/Form';\r\nimport PathRoutes from \"./components/Helpers/Routes.helper\";\r\nimport Detail from './components/Detail/Detail';\r\nimport Favorites from './components/Favorites/Favorites';\r\n// import SearchBar from './components/SearchBar/SearchBar.jsx';\r\n// import characters from './data.js';\r\n\r\n\r\nfunction App() {\r\n   const personajes = {\r\n      id: 1,\r\n      name: 'Rick Sanchez',\r\n      status: 'Alive',\r\n      species: 'Human',\r\n      gender: 'Male',\r\n      origin: {\r\n         name: 'Earth (C-137)',\r\n         url: 'https://rickandmortyapi.com/api/location/1',\r\n      },\r\n      image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\r\n   };\r\n   const [characters, setCharacters]=useState([]);\r\n   const location = useLocation()\r\n   const navigate = useNavigate();\r\n   const [access, setAccess] = useState(false);\r\n   const email = '123abc@gmail.com';\r\n   const password = 'asd123';\r\n   \r\n   useEffect(() => {\r\n      !access && navigate('/');\r\n   },[access]);\r\n\r\n\r\n   // const onSearch= () => {\r\n   //    setCharacters([...characters, personajes])\r\n   // }\r\n   function onSearch(id) {\r\n      axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({ data }) => {\r\n         if (data.name) {\r\n            setCharacters((oldChars) => [...oldChars, data]);\r\n         } else {\r\n            window.alert('¡No hay personajes con este ID!');\r\n         }\r\n      });\r\n   }\r\n   const onClose = (id) => {\r\n      // const characterFiltered = characters.filter((char) => char.id !== id)\r\n      setCharacters(characters.filter((char) => char.id !== Number(id)))\r\n      }\r\n\r\n      function Login(userData) {\r\n         const { email, password } = userData;\r\n         const URL = 'http://localhost:3001/rickandmorty/login/';\r\n         axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\r\n            const { access } = data;\r\n            setAccess(data);\r\n            access && navigate('/home');\r\n         });\r\n      }\r\n\r\n   return (\r\n      <div className='App'>\r\n         {location.pathname !== '/' && <NavBar onSearch={onSearch}/>}\r\n         \r\n         <Routes>\r\n            <Route path = {PathRoutes.FORM} element={<Form login ={Login}/>}></Route> \r\n            <Route path = {PathRoutes.HOME} element={<Cards characters={characters} onClose={onClose}/>}></Route>\r\n            <Route path = {PathRoutes.ABOUT} element={<About/>}></Route>   \r\n            <Route path = {PathRoutes.DETAIL} element={<Detail/>}></Route> \r\n            <Route path = {PathRoutes.FAVORITES} element={<Favorites/>}></Route>      \r\n         </Routes>\r\n         {/* <NavBar onSearch={onSearch}/> */}         {/* /* <SearchBar onSearch={(characterID) => window.alert(characterID)} /> */}\r\n         {/* <Cards characters={characters} onClose={onClose}/> */}\r\n         {/* <Card\r\n            id={Rick.id}\r\n            name={Rick.name}\r\n            status={Rick.status}\r\n            species={Rick.species}\r\n            gender={Rick.gender}\r\n            origin={Rick.origin.name}\r\n            image={Rick.image}\r\n            onClose={() => window.alert('Emulamos que se cierra la card')}\r\n         /> */}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}